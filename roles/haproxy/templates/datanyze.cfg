# {{ ansible_managed }}
global

	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private/haproxy

	tune.ssl.default-dh-param 4096

	#ssl-default-bind-ciphers AES128+EECDH:AES128+EDH
	ssl-default-bind-ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3 no-tls-tickets force-tlsv12




defaults
	log global
	log-format haproxy-json:\ {\"c_ip\":\"%ci\",\"c_port\":%cp,\"time\":"%t",\"f_end\":\"%ft\",\"sslv\":\"%sslv\",\"sslc\":\"%sslc\",\"b_end\":\"%b\",\"b_server\":\"%s\",\"tq\":%Tq,\"tw\":%Tw,\"tc\":%Tc,\"tr\":%Tr,\"tt\":%Tt,\"status_code\":%ST,\"bytes\":%B,\"req_cookie\":\"%CC\",\"res_cookie\":\"%CS\",\"t_state\":\"%tsc\",\"actconn\":%ac,\"feconn\":%fc,\"beconn\":%bc,\"srv_conn\":%sc,\"retries\":%rc,\"srv_queue\":%sq,\"backend_queue\":%bq,\"HTTP_Host\":\"%hr\",\"User_Agent\":\"%hs\",\"request_uri\":\"%HU\",\"req_method\":\"%HM\",\"HTTP_version\":\"%HV\";
	option  dontlognull
	option  redispatch
	retries 3
	timeout http-request 10s
	timeout queue   1m
	timeout connect 10s
	timeout client  1m
	timeout server  1m
	timeout http-keep-alive 10s
	timeout check   10s
	maxconn 50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http


frontend stats_front
	bind *:81
	mode http
	option dontlog-normal
	default_backend stats_backend


frontend datanyze-frontend
	bind :80
	mode http
	capture request header Host len 128
	capture request header User-Agent len 256
	option dontlognull
	option http-keep-alive
	option http-tunnel
	option forwardfor
	default_backend datanyze-backend

backend datanyze-backend
	mode http
	balance source
	hash-type consistent
	option httpchk
{% for host in groups['nginx'] %}
	server {{host}} {{hostvars[host].ipv4_address}}:{{proxy_proto_port}} check port {{http_proto_port}} send-proxy inter 5000 rise 3 fall 3
{% endfor %}


backend stats_backend
	mode http
	stats uri /haproxy/stats

